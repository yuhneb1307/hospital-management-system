<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Patient List</title>
  <link rel="stylesheet" href="css/style.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</head>

<body>
  <header>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
      <div class="container-fluid">
        <a class="navbar-brand" href="#">Hospital Management</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
          aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav ms-auto">
            <li class="nav-item">
              <a class="nav-link" href="#">Home</a>
            </li>
            <li class="nav-item">
              <a class="nav-link active" href="#">Patient List</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#">Staff List</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#">Appointment List</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>
  </header>

  <div class="container-fluid p-5 text-center main">
    <h1>List Of Patients</h1>
  </div>

  <div class="container mt-5">
    <div class="container-fluid p-5 text-center main">
      <!-- Search Bar -->
      <div class="input-group mb-4 mt-4">
        <input type="text" class="form-control" placeholder="Search Patients by Name..." id="search-bar">
      </div>
      <div class="container">
        <div id="patient-list" class="row">
          <!-- Patients list will be dynamically rendered here -->
        </div>

        <!-- Pagination Controls -->
        <nav aria-label="Page navigation">
          <ul class="pagination justify-content-center" id="pagination">
            <!-- Pagination links will be dynamically generated here -->
          </ul>
        </nav>
      </div>
    </div>
  </div>

  <script>
    // Debounce function to limit API calls while typing
    function debounce(func, delay) {
      let timer;
      return function (...args) {
        clearTimeout(timer);
        timer = setTimeout(() => func.apply(this, args), delay);
      };
    }

    // Function to fetch data for the current page
    function fetchPatients(page = 1, searchTerm = '') {
      fetch(`/patients/paginated?page=${page}&search=${encodeURIComponent(searchTerm)}`) // Adjust the API endpoint as needed
        .then(response => response.json())
        .then(data => {
          const patientList = document.getElementById('patient-list');
          const pagination = document.getElementById('pagination');

          // Clear the current patient list
          patientList.innerHTML = '';

          // Render patients
          data.data.forEach(patient => {
            const patientCard = document.createElement('a');
            patientCard.href = `/patients/${patient.id}`;
            patientCard.className = 'col-12 col-md-6 col-lg-2 patient-card mb-4';
            patientCard.style.textDecoration = 'none';
            patientCard.innerHTML = `
              <div class="info">
                <div class="name"> Name: ${patient.first_name} ${patient.last_name}</div>
                <div class="dob"> Date Of Birth: ${formatDate(patient.date_of_birth)}</div>
                <div class="address"> Address: ${patient.address}</div>
                <div class="phone_number"> Phone Number: ${patient.phone}</div>
              </div>
            `;
            patientList.appendChild(patientCard);
          });

          // Clear the current pagination controls
          pagination.innerHTML = '';

          // Generate new pagination controls dynamically
          if (data.totalPages > 1) {
            // Previous Button
            const prevLi = document.createElement('li');
            prevLi.classList.add('page-item', data.currentPage === 1 ? 'disabled' : '');
            const prevLink = document.createElement('a');
            prevLink.classList.add('page-link');
            prevLink.href = '#';
            prevLink.innerHTML = 'Previous';
            prevLink.onclick = (e) => {
              e.preventDefault();
              if (data.currentPage > 1) fetchPatients(data.currentPage - 1, searchTerm);
            };
            prevLi.appendChild(prevLink);
            pagination.appendChild(prevLi);

            // Page Numbers
            for (let i = 1; i <= data.totalPages; i++) {
              const li = document.createElement('li');
              li.classList.add('page-item');
              if (i === data.currentPage) li.classList.add('active');

              const a = document.createElement('a');
              a.classList.add('page-link');
              a.href = '#';
              a.textContent = i;
              a.onclick = (e) => {
                e.preventDefault();
                fetchPatients(i, searchTerm);
              };

              li.appendChild(a);
              pagination.appendChild(li);
            }

            // Next Button
            const nextLi = document.createElement('li');
            nextLi.classList.add('page-item', data.currentPage === data.totalPages ? 'disabled' : '');
            const nextLink = document.createElement('a');
            nextLink.classList.add('page-link');
            nextLink.href = '#';
            nextLink.innerHTML = 'Next';
            nextLink.onclick = (e) => {
              e.preventDefault();
              if (data.currentPage < data.totalPages) fetchPatients(data.currentPage + 1, searchTerm);
            };
            nextLi.appendChild(nextLink);
            pagination.appendChild(nextLi);
          }
        })
        .catch(error => console.error('Error fetching patients:', error));
    }

    // Function to format date as YYYY/MM/DD
    function formatDate(dob) {
      const date = new Date(dob);
      return `${date.getFullYear()}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getDate().toString().padStart(2, '0')}`;
    }

    // Initialize by fetching the first page
    fetchPatients(1);

    // Listen for input events on the search bar with debounce
    document.getElementById('search-bar').addEventListener('input', debounce(function () {
      const searchTerm = this.value.toLowerCase();
      fetchPatients(1, searchTerm);
    }, 300));
  </script>
</body>

</html>