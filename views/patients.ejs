<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Patient List</title>
  <link rel="stylesheet" href="css/style.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</head>

<header>
  <nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Hospital Management</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item">
            <a class="nav-link" href="#">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link active" href="#">Patient List</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Staff List</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Appointment List</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
</header>

<body>
  <div class="container-fluid p-5 text-center main">
    <h1>List Of Patients</h1>
  </div>

  <!-- Search Bar -->
  <div class="container mt-4">
    <div class="input-group mb-4">
      <input type="text" class="form-control" placeholder="Search Patients by Name..." id="search-bar">
    </div>
  </div>

  <div class="container mt-5">
    <div class="row" id="patient-list">
      <% patients.forEach(function(patient){ %>
        <a href="/patients/<%= patient.id %>" class="col-12 col-md-6 col-lg-2 patient-card mb-4" style="text-decoration: none;">
         
          <div class="info">
            <div class="dob"> Patient ID:
              <%= patient.id%>
            </div>
            <div class="name"> Name:
              <%= patient.first_name %> <%= patient.last_name %>
            </div>
            <div class="dob"> Date Of Birth:
              <span class="formatted-date" data-dob="<%= patient.date_of_birth %>"></span>
            </div>
            <div class="address"> Address:
              <%= patient.address %>
            </div>
            <div class="phone_number"> Phone Number:
              <%= patient.phone %>
            </div>
          </div>
        </a>
      <% }) %>
    </div>
  </div>

  <!-- Pagination Controls -->
  <div class="container mt-4">
    <nav>
      <ul class="pagination justify-content-center" id="pagination">
        <!-- Pagination buttons will be dynamically generated here -->
      </ul>
    </nav>
  </div>

  <script>
  document.addEventListener("DOMContentLoaded", function () {
  const dateElements = document.querySelectorAll('.formatted-date');
  const searchBar = document.getElementById('search-bar');
  const patientList = document.getElementById('patient-list');
  const patients = Array.from(patientList.children);
  const pagination = document.getElementById('pagination');

  // Constants for pagination
  const patientsPerPage = 50;
  let currentPage = 1;
  let filteredPatients = patients; // Start with all patients
  let totalPages = Math.ceil(filteredPatients.length / patientsPerPage);

  // Format the date for each patient
  dateElements.forEach(function (element) {
    const dob = element.getAttribute('data-dob');
    const date = new Date(dob);

    // Format the date as YYYY/MM/DD
    const formattedDate = `${date.getFullYear()}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getDate().toString().padStart(2, '0')}`;

    // Update the content of the element
    element.textContent = formattedDate;
  });

  // Function to display patients for the current page
  function displayPatients() {
    // Hide all patients
    patients.forEach(patient => patient.style.display = 'none');

    // Calculate the start and end indices for the current page
    const start = (currentPage - 1) * patientsPerPage;
    const end = start + patientsPerPage;

    // Show only the patients for the current page
    filteredPatients.slice(start, end).forEach(patient => patient.style.display = '');
  }

  // Function to generate pagination buttons
  function generatePaginationButtons() {
    pagination.innerHTML = ''; // Clear previous buttons

    for (let i = 1; i <= totalPages; i++) {
      const li = document.createElement('li');
      li.classList.add('page-item');
      li.innerHTML = `<a class="page-link" href="#">${i}</a>`;

      // Add active class to the current page button
      if (i === currentPage) {
        li.classList.add('active');
      }

      // Add click event listener to change page
      li.addEventListener('click', function () {
        currentPage = i;
        displayPatients();
        generatePaginationButtons();
      });

      pagination.appendChild(li);
    }
  }

  // Initial display of patients and pagination buttons
  displayPatients();
  generatePaginationButtons();

  // Search and filter functionality
  searchBar.addEventListener('input', function () {
    const searchTerm = this.value.toLowerCase();

    if (searchTerm) {
      // Filter patients based on the search term
      filteredPatients = patients.filter(patient => {
        const patientName = patient.querySelector('.name').textContent.toLowerCase();
        return patientName.includes(searchTerm);
      });
    } else {
      // If the search input is cleared, reset to all patients
      filteredPatients = patients;
    }

    // Reset pagination
    currentPage = 1;
    totalPages = Math.ceil(filteredPatients.length / patientsPerPage);
    displayPatients();
    generatePaginationButtons();
  });
});
  </script>
</body>

</html>