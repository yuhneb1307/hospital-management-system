<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Staff List</title>
  <link rel="stylesheet" href="css/style.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="/js/patient_list.js" crossorigin="anonymous"></script>
</head>

<header>
  <nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Hospital Management</a>
      <button
        class="navbar-toggler"
        type="button"
        data-bs-toggle="collapse"
        data-bs-target="#navbarNav"
        aria-controls="navbarNav"
        aria-expanded="false"
        aria-label="Toggle navigation"
      >
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item">
            <a class="nav-link" href="javascript:window.history.back()">Personal Information</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/patients">Patients List</a>
          </li>
          <li class="nav-item">
            <a class="nav-link active" href="javascript:location.reload()">Staff List</a>
          </li>
          <li class="nav-item">
            <button id="logout-btn" class="btn btn-link nav-link">Log Out</button>
          </li>
        </ul>
      </div>
    </div>
  </nav>
</header>

<body>
  <div class="container-fluid p-5 text-center main">
    <h1>List Of Staff</h1>
  </div>

  <!-- Search Bar -->
  <div class="container mt-4">
    <div class="input-group mb-4">
      <input type="text" class="form-control" placeholder="Search Staff by Name..." id="search-bar">
    </div>
  </div>

  <div class="container mt-5">
    <h1>List of Staffs</h1>
    <div class="row">
      <% staffs.forEach(function(staff) { %>
        <div class="col-12 col-md-6 col-lg-4 mb-4">
          <div class="card">
            <div class="card-body">
              <h5 class="card-title"><%= staff.first_name %> <%= staff.last_name %></h5>
              <p class="card-text">Email: <%= staff.email %></p>
              <p class="card-text">Role: <%= staff.role %></p>
              <p class="card-text">Department ID: <%= staff.department_id %></p>
              <p class="card-text">Gender: <%= staff.gender %></p>
              <!-- Add more staff details as needed -->
            </div>
          </div>
        </div>
      <% }) %>
    </div>
  </div>

  <!-- Pagination Controls -->
  <div class="container mt-4">
    <nav>
      <ul class="pagination justify-content-center" id="pagination">
        <!-- Pagination buttons will be dynamically generated here -->
      </ul>
    </nav>
  </div>

  <script>
  document.addEventListener("DOMContentLoaded", function () {
  const searchBar = document.getElementById('search-bar');
  const staffList = document.getElementById('staff-list');
  const staffs = Array.from(staffList.children);
  const pagination = document.getElementById('pagination');

  // Constants for pagination
  const staffsPerPage = 50;
  let currentPage = 1;
  let filteredStaffs = staffs; // Start with all staffs
  let totalPages = Math.ceil(filteredStaffs.length / staffsPerPage);

  // Function to display staffs for the current page
  function displayStaffs() {
    // Hide all staffs
    staffs.forEach(staff => staff.style.display = 'none');

    // Calculate the start and end indices for the current page
    const start = (currentPage - 1) * staffsPerPage;
    const end = start + staffsPerPage;

    // Show only the staffs for the current page
    filteredStaffs.slice(start, end).forEach(staff => staff.style.display = '');
  }

  // Function to generate pagination buttons
  function generatePaginationButtons() {
    pagination.innerHTML = ''; // Clear previous buttons

    for (let i = 1; i <= totalPages; i++) {
      const li = document.createElement('li');
      li.classList.add('page-item');
      li.innerHTML = `<a class="page-link" href="#">${i}</a>`;

      // Add active class to the current page button
      if (i === currentPage) {
        li.classList.add('active');
      }

      // Add click event listener to change page
      li.addEventListener('click', function () {
        currentPage = i;
        displayStaffs();
        generatePaginationButtons();
      });

      pagination.appendChild(li);
    }
  }

  // Initial display of staffs and pagination buttons
  displayStaffs();
  generatePaginationButtons();

  // Search and filter functionality
  searchBar.addEventListener('input', function () {
    const searchTerm = this.value.toLowerCase();

    if (searchTerm) {
      // Filter staffs based on the search term
      filteredStaffs = staffs.filter(staff => {
        const staffName = staff.querySelector('.name').textContent.toLowerCase();
        return staffName.includes(searchTerm);
      });
    } else {
      // If the search input is cleared, reset to all staffs
      filteredStaffs = staffs;
    }

    // Reset pagination
    currentPage = 1;
    totalPages = Math.ceil(filteredStaffs.length / staffsPerPage);
    displayStaffs();
    generatePaginationButtons();
  });
});
  </script>
</body>

</html>